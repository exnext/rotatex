<!doctype html>
<html>

<head>
  <meta charset="utf-8">
  <title>
    <%= name %> ver.<%= version %>
  </title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="./favicon.ico">

  <link rel="stylesheet" href="//unpkg.com/@highlightjs/cdn-assets@11.5.1/styles/default.min.css">
  <script src="//unpkg.com/@highlightjs/cdn-assets@11.5.1/highlight.min.js"></script>

  <style>
    body {
      background-color: black;
      color: white;
      font-family: sans-serif;
    }

    section {
      position: relative;
      margin: 20px;
      padding: 20px;
      background-color: #fff4;
      border-radius: 10px;
    }

    section a {
      color: inherit;
      font-weight: bold;
    }

    section.demo>div {
      display: flex;
      align-items: center;
      gap: 20px;
    }

    section.demo>div>* {
      flex: 1;
      margin: 10px;
    }

    section.demo>div>*:last-child {
      display: flex;
      justify-content: center;
    }
  </style>

  <style media="all and (max-width: 1000px)">
    section>div {
      flex-direction: column;
    }
  </style>

  <style name="common">
    ul {
      background-color: red;
      width: 150px;
      aspect-ratio: 1;

      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    li {
      transition: all 1s;
    }

    li>* {
      transition: all 1s;
    }

    ul:hover * {
      animation-duration: 10s !important;
    }
  </style>
</head>

<body>
  <template id="section-content">
    <div>
      <pre><code class="language-html source"></code></pre>
      <div>
        <div class="result"></div>
      </div>
    </div>
  </template>

  <h1>Introduction</h1>

  <section id="common-styles">
    <h3>Documentation</h3>
    <div>Look at <a href="https://www.npmjs.com/package/@exnext/rotatex">npm</a> or <a
        href="https://github.com/exnext/rotatex">github</a></div>

    <h3>NPM</h3>
    <pre><code class="language-bash">npm install @exnext/rotatex</code></pre>

    <h3>Common styles for examples below</h3>
    <div>
      There are example styles below with are helpful for this presentation. That aren't requiert for your project.
    </div>
    <pre><code class="language-html source"></code></pre>
  </section>

  <section class="demo">
    <h3>Without usage rotatex library</h3>

    <template>
      <ul>
        <li><span>Test 1</span></li>
        <li><span>Test 2</span></li>
        <li><span>Test 3</span></li>
        <li><span>Test 4</span></li>
        <li><span>Test 5</span></li>
        <li><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <h1>Based only on rotatex.css</h1>

  <section class="demo">
    <h3>Usage with css class</h3>

    <template>
      <ul class="rotatex">
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <section class="demo">
    <h3>Usage with css variables</h3>

    <template>
      <ul class="rotatex">
        <li style="--angle: 0deg;"><span>Test 1</span></li>
        <li style="--angle: 60deg;"><span>Test 2</span></li>
        <li style="--angle: 120deg;"><span>Test 3</span></li>
        <li style="--angle: 180deg;"><span>Test 4</span></li>
        <li style="--angle: 240deg;"><span>Test 5</span></li>
        <li style="--angle: 300deg;"><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <section class="demo">
    <h3>Excluded items</h3>

    <template>
      <style>
        .excluded-menu {
          font-weight: bold;
        }
      </style>

      <ul class="rotatex">
        <li class="r-off excluded-menu">Menu</li>

        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li style="--angle: 180deg;"><span>Test 4</span></li>
        <li style="--angle: 240deg;"><span>Test 5</span></li>
        <li style="--angle: 300deg;"><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <section class="demo">
    <h3>Left rotation animation</h3>

    <template>
      <ul class="rotatex rotatex-rotate rotatex-rotate__left">
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <section class="demo">
    <h3>Right rotation animation</h3>

    <template>
      <ul class="rotatex rotatex-rotate rotatex-rotate__right">
        <li style="--angle: 0deg;"><span>Test 1</span></li>
        <li style="--angle: 60deg;"><span>Test 2</span></li>
        <li style="--angle: 120deg;"><span>Test 3</span></li>
        <li style="--angle: 180deg;"><span>Test 4</span></li>
        <li style="--angle: 240deg;"><span>Test 5</span></li>
        <li style="--angle: 300deg;"><span>Test 6</span></li>
      </ul>
    </template>
  </section>

  <h1>Based on rotatex.css and rotatex.js</h1>

  <section class="demo">
    <h3>Creating dynamic menu</h3>

    <template>
      <ul id="dynamic"></ul>

      <script>
        (() => {
          let ul = document.getElementById('dynamic');
          let rotatex = new Rotatex(ul);

          for (i = 1; i <= 10; i++) {
            let li = document.createElement('li');
            let span = document.createElement('span');

            span.innerText = 'Test ' + i;
            li.appendChild(span);
            ul.appendChild(li);
          }
        })();
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Real time changing menu items</h3>

    <template>
      <ul id="interval"></ul>

      <script>
        (() => {
          let ul = document.getElementById('interval');
          let rotatex = new Rotatex(ul);
          let x = 1;

          setInterval(function () {
            let li = document.createElement('li');
            let span = document.createElement('span');

            span.innerText = 'Test ' + x++;
            li.appendChild(span);
            ul.appendChild(li);


            if (ul.children.length >= 15) {
              for (let i = 0; i < Math.ceil(Math.random() * 5); i++) {
                ul.children[0].remove();
              }
            }
          }, 1000);
        })();  
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Rotating by the mouse wheel or finger on the touch screen actions - clockwise</h3>

    <template>
      <ul class="rotatex" id="clockwise_action">
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>

      <script>
        (() => {
          let ul = document.getElementById('clockwise_action');
          let rotatex = new Rotatex(ul, { rotateByAngle: 10 });
        })();
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Rotating by the mouse wheel or finger on the touch screen actions - counterclockwise</h3>

    <template>
      <ul class="rotatex" id="counterclockwise_action">
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>

      <script>
        (() => {
          let ul = document.getElementById('counterclockwise_action');
          let rotatex = new Rotatex(ul, { rotateByAngle: -10 });
        })();
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Rotating with limit by the mouse wheel or finger on the touch screen actions</h3>

    <template>
      <ul class="rotatex" id="limit_actions">
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>

      <script>
        (() => {
          let ul = document.getElementById('limit_actions');
          let rotatex = new Rotatex(ul, { rotateByAngle: 10, rotateLimit: 720 });
        })();
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Event for rotation actions</h3>

    <template>
      <style>
        .counter {
          font-weight: bold;
          font-size: 2rem;
        }
      </style>

      <ul class="rotatex" id="event">
        <li class="r-off counter">0</li>
        <li class="r-0"><span>Test 1</span></li>
        <li class="r-60"><span>Test 2</span></li>
        <li class="r-120"><span>Test 3</span></li>
        <li class="r-180"><span>Test 4</span></li>
        <li class="r-240"><span>Test 5</span></li>
        <li class="r-300"><span>Test 6</span></li>
      </ul>

      <script>
        (() => {
          let ul = document.getElementById('event');
          let counter = ul.querySelector('.r-off.counter');
          let rotatex = new Rotatex(ul, { rotateByAngle: 10, rotateLimit: 7200 });

          rotatex.on('rotate', (event) => {
            counter.innerText = Math.floor(event.mainOffsetAngle / 360);
          });
        })();
      </script>
    </template>
  </section>

  <section class="demo">
    <h3>Event for rotation actions with rotate method</h3>

    <template>
      <style>
        .label {
          font-weight: bold;
        }

        #master {
          margin-bottom: 50px;
        }
      </style>

      <ul class="rotatex" id="master">
        <li class="r-off label">Master</li>

        <li class="r-0"><span>Master 1</span></li>
        <li class="r-60"><span>Master 2</span></li>
        <li class="r-120"><span>Master 3</span></li>
        <li class="r-180"><span>Master 4</span></li>
        <li class="r-240"><span>Master 5</span></li>
        <li class="r-300"><span>Master 6</span></li>
      </ul>

      <ul class="rotatex" id="slave">
        <li class="r-off label">Slave</li>

        <li style="--angle: 0deg;"><span>Slave 1</span></li>
        <li style="--angle: 60deg;"><span>Slave 2</span></li>
        <li style="--angle: 120deg;"><span>Slave 3</span></li>
      </ul>

      <script>
        (() => {
          let ul_master = document.getElementById('master');
          let rotatex_master = new Rotatex(ul_master, { rotateByAngle: 10 });

          let ul_slave = document.getElementById('slave');
          let rotatex_salve = new Rotatex(ul_slave);

          rotatex_master.on('rotate', (event) => {
            rotatex_salve.setRotation(event.mainOffsetAngle);
          });
        })();
      </script>
    </template>
  </section>

  <h1>Useful examples</h1>

  <section class="demo">
    <h3>Radio knobs</h3>

    <template>
      <style>
        .radio-konbs {
          background-color: initial;
        }

        .radio-konbs span {
          display: block;
          width: 10px;
          height: 10px;
          border-radius: 50%;
          background-color: red;
        }

        .radio-konbs__konbs {
          width: 50%;
          height: 50%;
          background-color: white;
          border-radius: 50%;
          border: 3px solid black;
        }
      </style>

      <ul class="rotatex radio-konbs">
        <li class="r-0"><span></span></li>
        <li class="r-60"><span></span></li>
        <li class="r-120"><span></span></li>
        <li class="r-180"><span></span></li>
        <li class="r-240"><span></span></li>
        <li class="r-300"><span></span></li>

        <li class="r-off radio-konbs__konbs"></li>
      </ul>
    </template>
  </section>

  <script>
    const styles = document.querySelectorAll('style[name="common"]');
    const commonStyles = document.querySelector('section#common-styles .source');
    commonStyles.textContent = [...styles].map(style => style.outerHTML).join('\n\n');

    const sectionContent = document.querySelector('template#section-content');
    const sections = document.querySelectorAll('section.demo');

    for (let section of sections) {
      let template = section.querySelector('template');

      if (template) {
        section.appendChild(sectionContent.content.cloneNode(true));

        let source = section.querySelector('.source');
        source.textContent = template.innerHTML;

        let result = section.querySelector('.result');
        result.appendChild(document.importNode(template.content.cloneNode(true), true));
      }
    }

    hljs.highlightAll();
  </script>
</body>

</html>